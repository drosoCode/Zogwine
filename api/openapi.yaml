openapi: 3.0.1
info:
  title: Zogwine API
  description: This is the API documentation for the Zogwine media center
  version: 1.0.0
tags:
- name: tvs
  description: TV Show Operations
- name: movie
  description: Movie Operations
- name: user
  description: User Operations
- name: device
  description: Device Operations (accessible only when cast is allowed in settings)
- name: player
  description: Player Operations
- name: core
  description: Core Operations
- name: tag
  description: Tag Operations
- name: person
  description: Person Operations
- name: search
  description: Search Operations
- name: tracker
  description: Tracker Operations
- name: scraper
  description: Scraper Operations
- name: library
  description: Library Operations
servers:
- url: /api/
- url: http://10.10.2.1:8083/api
  
paths:
  /tvs:
    get:
      tags:
      - tvs
      summary: Get list of all tv shows
      operationId: tvs_get_shows
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/tvshow'
      security:
      - user: []
      - admin: []

  /tvs/{idShow}:
    get:
      tags:
      - tvs
      summary: Get tv show data
      operationId: tvs_get_show
      parameters:
      - name: idShow
        in: path
        description: tv show ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    $ref: '#/components/schemas/tvshow'
      security:
      - user: []
      - admin: []
      
    put:
      tags:
      - tvs
      summary: Edit a tv show
      operationId: tvs_update
      parameters:
      - name: idShow
        in: path
        description: tv show ID
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                overview:
                  type: string
                icon:
                  type: string
                fanart:
                  type: string
                rating:
                  type: integer
                premiered:
                  type: integer
                scraperID:
                  type: string
                scraperName:
                  type: string
                scraperData:
                  type: string
                scraperLink:
                  type: string
                path:
                  type: string
                idLib:
                  type: integer
                updateMode:
                  type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []
      
    delete:
      tags:
      - tvs
      summary: Delete a tv show
      operationId: tvs_delete_show
      parameters:
      - name: idShow
        in: path
        description: tv show ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
        - admin: []

  /tvs/{idShow}/episode:
    get:
      tags:
      - tvs
      summary: Get tv show episodes list
      operationId: tvs_get_show_ep
      parameters:
      - name: idShow
        in: path
        description: tv show ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/tvshow_episode'
      security:
      - user: []
      - admin: []

  /tvs/{idShow}/season/{season}/episode:
    get:
      tags:
      - tvs
      summary: Get tv show episodes list by season
      operationId: tvs_get_show_ep_season
      parameters:
      - name: idShow
        in: path
        description: tv show ID
        required: true
        schema:
          type: integer
      - name: season
        in: path
        description: season number
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/tvshow_episode'
      security:
      - user: []
      - admin: []

  /tvs/{idShow}/season:
    get:
      tags:
      - tvs
      summary: Get tv show season list
      operationId: tvs_get_show_season
      parameters:
      - name: idShow
        in: path
        description: tv show ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/tvshow_season'
      security:
      - user: []
      - admin: []

  /tvs/{idShow}/season/{season}:
    get:
      tags:
      - tvs
      summary: Get tv show season data
      operationId: tvs_get_show_season_filtered
      parameters:
      - name: idShow
        in: path
        description: tv show ID
        required: true
        schema:
          type: integer
      - name: season
        in: path
        description: season number
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    $ref: '#/components/schemas/tvshow_season'
      security:
      - user: []
      - admin: []
      
    put:
      tags:
      - tvs
      summary: Edit a season
      operationId: tvs_season_put
      parameters:
      - name: idShow
        in: path
        description: tv show id
        required: true
        schema:
          type: integer
      - name: season
        in: path
        description: season
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                overview:
                  type: string
                icon:
                  type: string
                season:
                  type: number
                rating:
                  type: integer
                premiered:
                  type: integer
                scraperID:
                  type: string
                scraperName:
                  type: string
                scraperData:
                  type: string
                scraperLink:
                  type: string
                updateMode:
                  type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []
      
    delete:
      tags:
      - tvs
      summary: Delete a season
      operationId: tvs_season_delete
      parameters:
      - name: idShow
        in: path
        description: tv show id
        required: true
        schema:
          type: integer
      - name: season
        in: path
        description: season
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []

  /tvs/{idShow}/season/{season}/status:
    put:
      tags:
      - tvs
      summary: Toggle the watched status for a show
      operationId: tvs_season_status
      parameters:
      - name: idShow
        in: path
        description: tv show ID
        required: true
        schema:
          type: integer
      - name: season
        in: path
        description: season number
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - user: []
      - admin: []

  /tvs/episode/{idEpisode}:
    get:
      tags:
      - tvs
      summary: Get episode data
      operationId: tvs_ep_data
      parameters:
      - name: idEpisode
        in: path
        description: episode id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    $ref: '#/components/schemas/tvshow_episode'
      security:
      - user: []
      - admin: []
      
    put:
      tags:
      - tvs
      summary: Edit an episode
      operationId: tvs_ep_put
      parameters:
      - name: idEpisode
        in: path
        description: episode id
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                overview:
                  type: string
                icon:
                  type: string
                fanart:
                  type: string
                season:
                  type: number
                episode:
                  type: number
                rating:
                  type: integer
                premiered:
                  type: integer
                scraperID:
                  type: string
                scraperName:
                  type: string
                scraperData:
                  type: string
                scraperLink:
                  type: string
                updateMode:
                  type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []
      
    delete:
      tags:
      - tvs
      summary: Delete episode
      operationId: tvs_ep_delete
      parameters:
      - name: idEpisode
        in: path
        description: episode id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []

  /tvs/episode/{idEpisode}/status:
    put:
      tags:
      - tvs
      summary: Toggle the watched status for an episode
      operationId: tvs_ep_status
      parameters:
      - name: idEpisode
        in: path
        description: episode id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - user: []
      - admin: []


  /movie:
    get:
      tags:
      - movie
      summary: Get movie list
      operationId: mov_list
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/movie'
      security:
      - user: []
      - admin: []
                    
  /movie/{idMovie}:
    get:
      tags:
      - movie
      summary: Get movie data
      operationId: mov_data
      parameters:
      - name: idMovie
        in: path
        description: movie id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    $ref: '#/components/schemas/movie'
      security:
      - user: []
      - admin: []
      
    put:
      tags:
      - movie
      summary: Edit a movie
      operationId: mov_data_put
      parameters:
      - name: idMovie
        in: path
        description: movie ID
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                overview:
                  type: string
                icon:
                  type: string
                fanart:
                  type: string
                rating:
                  type: integer
                premiered:
                  type: integer
                scraperID:
                  type: string
                scraperName:
                  type: string
                scraperData:
                  type: string
                scraperLink:
                  type: string
                idCollection:
                  type: integer
                updateMode:
                  type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []
    
    delete:
      tags:
      - movie
      summary: Delete a movie
      operationId: movie_delete
      parameters:
      - name: idMovie
        in: path
        description: movie ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
        - admin: []

  /movie/collection:
    get:
      tags:
      - movie
      summary: Get collection list
      operationId: mov_collection_list
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/movie_collection'
      security:
      - user: []
      - admin: []
                      
  /movie/collection/{idCollection}:
    get:
      tags:
      - movie
      summary: Get collection data
      operationId: mov_collection
      parameters:
      - name: idCollection
        in: path
        description: collection id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    $ref: '#/components/schemas/movie_collection'
      security:
      - user: []
      - admin: []
                    
  /movie/fromCollection/{idCollection}:
    get:
      tags:
      - movie
      summary: Get movies from a collection
      operationId: mov_collection_data
      parameters:
      - name: idCollection
        in: path
        description: collection id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/movie'
      security:
      - user: []
      - admin: []

  /movie/{idMovie}/status:
    put:
      tags:
      - movie
      summary: Toggle the watched status for a movie
      operationId: movie_status
      parameters:
      - name: idMovie
        in: path
        description: movie id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - user: []
      - admin: []
                  
  /movie/scan:
    get:
      tags:
      - movie
      summary: Run a scan for new movies
      operationId: movie_scan
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []
                    
  /movie/scan/result:
    get:
      tags:
      - movie
      summary: Get multiple results available for movies 
      operationId: movie_scan_results
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/movie'
      security:
      - admin: []



  /user/login:
    post:
      tags:
      - user
      summary: login
      operationId: user_signin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    properties:
                      token:
                        type: string

  /user/logout:
    get:
      tags:
      - user
      summary: logout
      operationId: user_signout
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - user: []
      - admin: []

  /user/data:
    get:
      tags:
      - user
      summary: user data
      operationId: user_data
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      admin:
                        type: integer
                      cast:
                        type: integer
                      allowMovie:
                        type: integer
                      allowTvs:
                        type: integer
      security:
      - user: []
      - admin: []

  /user/nginx:
    get:
      tags:
      - user
      summary: check access right to an url
      description: INTERNAL USE ONLY, restricted to 127.0.0.1
      operationId: user_nginx
      parameters:
        - in: header
          name: X-Original-URI
          description: the accessed url
          schema:
            type: string
          required: true
      responses:
        200:
          description: access granted to the url
        401:
          description: access refused to the url



  /device:
    get:
      tags:
      - device
      summary: Get a list of all devices
      operationId: device_list
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/device'
      security:
      - user: []
      - admin: []
      
  /device/{idDevice}:
    get:
      tags:
      - device
      summary: Get device data
      operationId: device_data
      parameters:
      - name: idDevice
        in: path
        description: device ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/device'
      security:
      - user: []
      - admin: []
      
  /device/{idDevice}/function:
    get:
      tags:
      - device
      summary: Get device available functions
      operationId: device_function
      parameters:
      - name: idDevice
        in: path
        description: device ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      type: string
      security:
      - user: []
      - admin: []
      
  /device/{idDevice}/function/{function}:
    get:
      tags:
      - device
      summary: Call device function
      operationId: device_function_name
      parameters:
      - name: idDevice
        in: path
        description: device ID
        required: true
        schema:
          type: integer
      - name: function
        in: path
        description: function name
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
      security:
      - user: []
      - admin: []
      
  /device/supported:
    get:
      tags:
      - device
      summary: Get a list of all supported device types
      operationId: device_list_supported
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      type: string
      security:
      - user: []
      - admin: []



  /player/start:
    post:
      tags:
      - player
      summary: Start player
      operationId: player_start
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mediaType:
                  type: integer
                  default: "required"
                mediaData:
                  type: string
                  default: "required"
                audioStream:
                  type: string
                  default: "optional"
                subStream:
                  type: string
                  default: "optional"
                subFile:
                  type: string
                  default: "optional"
                startFrom:
                  type: string
                  default: "optional"
                resize:
                  type: integer
                  default: "optional"
                remove3D:
                  type: integer
                  default: "optional"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - user: []
      - admin: []

  /player/status:
    get:
      tags:
      - player
      summary: transcoder status
      operationId: player_status
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    properties:
                      running:
                        type: boolean
                      available:
                        type: boolean
      security:
      - user: []
      - admin: []

  /player/subtitle/{mediaType}/{mediaData}/stream/{subStream}:
    get:
      tags:
      - player
      summary: Get subtitles for a specified media (from a stream id)
      operationId: player_subtitle_stream
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      - name: mediaData
        in: path
        description: media data
        required: true
        schema:
          type: string
      - name: subStream
        in: path
        description: subtitle stream index, required or subFile
        required: true
        schema:
          type: integer
      - name: startFrom
        in: query
        description: cut x seconds at the beginning of the subtitles
        required: false
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            text/vtt: {}
      security:
      - user: []
      - admin: []
      
  /player/subtitle/{mediaType}/{mediaData}/file/{subFile}:
    get:
      tags:
      - player
      summary: Get subtitles for a specified media (from a stream file)
      operationId: player_subtitle_file
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      - name: mediaData
        in: path
        description: media data
        required: true
        schema:
          type: string
      - name: subFile
        in: path
        description: subtitle file identifier, required or subStream
        required: true
        schema:
          type: string
      - name: startFrom
        in: query
        description: cut x seconds at the beginning of the subtitles
        required: false
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            text/vtt: {}
      security:
      - user: []
      - admin: []
      
  /player/m3u8:
    get:
      tags:
      - player
      summary: Get the M3U8 HLS playlist
      operationId: player_m3u8
      responses:
        200:
          description: successful operation
          content:
            application/x-mpegURL: {}
      security:
      - user: []
      - admin: []

  /player/file/{mediaType}/{mediaData}:
    get:
      tags:
      - player
      summary: Get the media file url
      operationId: player_file
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      - name: mediaData
        in: path
        description: media data
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
      security:
      - user: []
      - admin: []

  /player/property/{mediaType}/{mediaData}:
    get:
      tags:
      - player
      summary: Get the media file properties
      operationId: player_props
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      - name: mediaData
        in: path
        description: media data
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    properties:
                      format:
                        type: string
                      duration:
                        type: number
                      extension:
                        type: string
                      audio:
                        type: string
                      subtitles:
                        type: string
                      stereo3d:
                        type: string
                      ratio:
                        type: string
                      dimension:
                        type: string
                      pix_fmt:
                        type: string
                      video_codec:
                        type: string
                      size:
                        type: string
      security:
      - user: []
      - admin: []
      
    put:
      tags:
      - player
      summary: Edit a media file properties
      operationId: player_props_put
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      - name: mediaData
        in: path
        description: media data
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    properties:
                      format:
                        type: string
                      duration:
                        type: number
                      extension:
                        type: string
                      audio:
                        type: string
                      subtitles:
                        type: string
                      stereo3d:
                        type: string
                      ratio:
                        type: string
                      dimension:
                        type: string
                      pix_fmt:
                        type: string
                      video_codec:
                        type: string
                      size:
                        type: string
      security:
      - admin: []

  /player/stop:
    get:
      tags:
      - player
      summary: Stop the player
      operationId: player_stop
      parameters:
      - name: endTime
        in: query
        description: end time (in seconds)
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - user: []
      - admin: []



  /core/statistic:
    get:
      tags:
      - core
      summary: Get general statistics
      operationId: core_stats
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    properties:
                      watchedEpisodeCount:
                        type: integer
                      watchedEpisodeSum:
                        type: integer
                      tvsCount:
                        type: integer
                      episodeCount:
                        type: integer
                      movieCount:
                        type: integer
                      watchedMovieCount:
                        type: integer
                      lostTime:
                        type: number
      security:
      - user: []
      - admin: []
      
  /search:
    post:
      tags:
      - search
      summary: Search
      operationId: core_search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: array
                  items:
                    type: integer
                    default: "id tag, integer"
                person:
                  type: array
                  items:
                    type: integer
                    default: "id person, integer"
                name:
                  type: string
                date:
                  type: string
                  default: "can be integer (year) or string (YYYY-MM-DD)"
                andMode:
                  type: boolean
                  default: "default: false (OR)"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - user: []
      - admin: []

  /core/log:
    get:
      tags:
      - core
      summary: Get logs
      operationId: core_log
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      type: string
      security:
      - admin: []
      
  /core/log/{amount}:
    get:
      tags:
      - core
      summary: Get logs
      operationId: core_log2
      parameters:
      - name: amount
        in: path
        description: number of log lines
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      type: string
      security:
      - admin: []
      
  /tag/{mediaType}/{mediaData}:
    get:
      tags:
      - tag
      summary: Get tags for a specific media
      operationId: core_tag_media
      parameters:
      - name: mediaType
        in: path
        description: type of media
        required: true
        schema:
          type: integer
      - name: mediaData
        in: path
        description: media data
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/tag'
      security:
      - user: []
      - admin: []
      
  /tag/category:
    get:
      tags:
      - tag
      summary: Get a list of tag categories
      operationId: core_tag_catg
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      type: string
      security:
      - user: []
      - admin: []
      
  /tag/category/{catg}:
    get:
      tags:
      - tag
      summary: Get tags for a specific category
      operationId: core_tag_catg_val
      parameters:
      - name: catg
        in: path
        description: category name
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/tag'
      security:
      - user: []
      - admin: []
      
  /tag/{id}:
    get:
      tags:
      - tag
      summary: Get tag data for a specific id
      operationId: core_tag
      parameters:
      - name: id
        in: path
        description: tag id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    $ref: '#/components/schemas/tag'
      security:
      - user: []
      - admin: []
      
  /person/{mediaType}/{mediaData}:
    get:
      tags:
      - person
      summary: Get people involved in a specific media
      operationId: core_person_media
      parameters:
      - name: mediaType
        in: path
        description: type of media
        required: true
        schema:
          type: integer
      - name: mediaData
        in: path
        description: media data
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/person'
      security:
      - user: []
      - admin: []
      
  /person/letter/{letter}:
    get:
      tags:
      - person
      summary: Get people with a name starting with a specific letter
      operationId: core_person_letter
      parameters:
      - name: letter
        in: path
        description: letter
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/person'
      security:
      - user: []
      - admin: []
      
  /person/name/{name}:
    get:
      tags:
      - person
      summary: Get person with a specific name
      operationId: core_person_name
      parameters:
      - name: name
        in: path
        description: name
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    $ref: '#/components/schemas/person'
      security:
      - user: []
      - admin: []
      
  /person/{id}:
    get:
      tags:
      - person
      summary: Get person with a specific id
      operationId: core_person_id
      parameters:
      - name: id
        in: path
        description: person id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    $ref: '#/components/schemas/person'
      security:
      - user: []
      - admin: []
      
  /core/image/{id}:
    get:
      tags:
      - core
      summary: Get image url from identifier
      operationId: core_image
      parameters:
      - name: id
        in: path
        description: image id (base64)
        required: true
        schema:
          type: string
      responses:
        302:
          description: redirect to the image location
      security:
      - user: []
      - admin: []
      
  /core/scan/status:
    get:
      tags:
      - core
      summary: Get status of scans
      operationId: core_scan_status
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    properties:
                      tvs:
                        type: boolean
                      movie:
                        type: boolean
                      upcomingEpisode:
                        type: boolean
                      cache:
                        type: boolean
                      person:
                        type: boolean
      security:
      - admin: []

  /core/scan/cache:
    get:
      tags:
      - core
      summary: Update cache
      operationId: core_scan_cache
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []

  /core/scan/person:
    get:
      tags:
      - core
      summary: Run a scan for new people
      operationId: core_scan_person
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []


  /tracker/scan/all:
    get:
      tags:
      - tracker
      summary: Run a scan for all enabled trackers
      operationId: tracker_scan_all
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []
      
  /tracker/sync/all:
    get:
      tags:
      - tracker
      summary: Run a sync for all enabled trackers
      operationId: tracker_sync_all
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
                    default: ok
      security:
      - admin: []

  /scraper/result:
    get:
      tags:
      - scraper
      summary: Return the medias that needs a result selection
      operationId: scraper_result
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        mediaType:
                          type: integer
                        mediaData:
                          type: string
      security:
      - admin: []

  /scraper/result/{mediaType}:
    get:
      tags:
      - scraper
      summary: Return the medias that needs a result selection for a specific mediaType
      operationId: scraper_result_mediatype
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        mediaType:
                          type: integer
                        mediaData:
                          type: string
      security:
      - admin: []

  /scraper/result/{mediaType}/{mediaData}:
    get:
      tags:
      - scraper
      summary: Return the scraping results for a specific media
      operationId: scraper_result_media
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      - name: mediaData
        in: path
        description: media data
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/media_search_data'
      security:
      - admin: []


  /scraper/select/{mediaType}/{mediaData}/{id}:
    post:
      tags:
      - scraper
      summary: Select a scraping result for a specific media
      operationId: scraper_select
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      - name: mediaData
        in: path
        description: media data
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: id of the selected result
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
      security:
      - admin: []
      
  /scraper/scan/{mediaType}:
    post:
      tags:
      - scraper
      summary: Start a scraper scan (only supported for person)
      operationId: scraper_scan
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      - name: autoadd
        in: query
        description: if the system should try to automatically select the appropriate scraper result
        required: false
        schema:
          type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
      security:
      - admin: []
      
  /scraper/scan/{mediaType}/{idLib}:
    post:
      tags:
      - scraper
      summary: Start a scraper scan for a specific media library
      operationId: scraper_scan_idlib
      parameters:
      - name: mediaType
        in: path
        description: media type
        required: true
        schema:
          type: integer
      - name: idLib
        in: path
        description: id of the media library
        required: true
        schema:
          type: string
      - name: autoadd
        in: query
        description: if the system should try to automatically select the appropriate scraper result
        required: false
        schema:
          type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: string
      security:
      - admin: []
      
  
  /library:
    get:
      tags:
      - library
      summary: Get a list of all libraries
      operationId: library_list
      parameters:
      - name: mediatype
        in: query
        description: return only the libraries corresponding to this media type
        required: false
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id: 
                          type: integer
                        mediaType: 
                          type: integer
                        name: 
                          type: string
                        path: 
                          type: string
      security:
      - admin: []

  /library/{idLib}:
    get:
      tags:
      - library
      summary: Get the data for a given library
      operationId: library_get
      parameters:
      - name: idLib
        in: path
        description: library id
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: ok
                  data:
                    type: object
                    properties:
                      id: 
                        type: integer
                      mediaType: 
                        type: integer
                      name: 
                        type: string
                      path: 
                        type: string
      security:
      - admin: []

      
components:
  schemas:
    tvshow:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        overview:
          type: string
        icon:
          type: string
        fanart:
          type: string
        rating:
          type: number
        premiered:
          type: integer
        season:
          type: integer
        episode:
          type: integer
        watchedEpisode:
          type: integer
        scraperName:
          type: string
        scraperID:
          type: number
        scraperData:
          type: string
        scraperLink:
          type: string
        path:
          type: string
        idLib:
          type: integer
        updateMode:
          type: integer
        addDate:
          type: integer
        updateDate:
          type: integer

    tvshow_season:
      type: object
      properties:
        idShow:
          type: integer
        title:
          type: string
        overview:
          type: string
        icon:
          type: string
        fanart:
          type: string
        season:
          type: integer
        episode:
          type: integer
        premiered:
          type: integer
        watchedEpisode:
          type: integer
        scraperLink:
          type: string
        addDate:
          type: integer
        updateDate:
          type: integer

    tvshow_episode:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        overview:
          type: string
        icon:
          type: string
        season:
          type: integer
        episode:
          type: integer
        rating:
          type: number
        premiered:
          type: integer
        scraperName:
          type: string
        scraperID:
          type: string
        filler:
          type: integer
        watchCount:
          type: integer
        idShow:
          type: integer
        addDate:
          type: integer
        updateDate:
          type: integer

    movie:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        overview:
          type: string
        icon:
          type: string
        fanart:
          type: string
        rating:
          type: number
        premiered:
          type: integer
        scraperName:
          type: string
        scraperID:
          type: number
        scraperData:
          type: string
        scraperLink:
          type: string
        watchCount:
          type: integer
        addDate:
          type: integer
        updateDate:
          type: integer

    movie_collection:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        overview:
          type: string
        icon:
          type: string
        fanart:
          type: string
        movieCount:
          type: integer
        watchedMovies:
          type: integer
        scraperLink:
          type: string
        addDate:
          type: integer
        updateDate:
          type: integer
        
    device:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        address:
          type: string
        enabled:
          type: integer
        available:
          type: integer
          
    tag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        value:
          type: string
        icon:
          type: string
          
    person:
      type: object
      properties:
        id:
          type: integer
        role:
          type: string
          description: "may not be available, depending on the request"
        name:
          type: string
        gender:
          type: integer
        birthdate:
          type: string
        deathdate:
          type: string
        description:
          type: string
        known_for:
          type: string
          
    media_search_data:
      type: object
      properties:
        title:
          type: string
        overview:
          type: string
        icon: 
          type: string
        premiered: 
          type: integer
        scraperID: 
          type: string
        scraperName: 
          type: string
        scraperData: 
          type: string
        scraperLink: 
          type: string
        
        
  securitySchemes:
    user:
      type: http
      scheme: bearer
    admin:
      type: http
      scheme: bearer
