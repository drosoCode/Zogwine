user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    access_log /dev/stdout;
    error_log /dev/stdout;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    index   index.html index.htm;

    server {
        listen       8080 default_server;
        listen       [::]:8080 default_server;
        server_name  localhost;
        root /var/www/html;

        location /socket.io {
            server_tokens off;
            include uwsgi_params;
            uwsgi_pass unix:/tmp/uwsgi.socket;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
        location / {
            server_tokens off;
            root /home/server/static;
        }
        location /cache {
            server_tokens off;
            root /home/server/out;
        }
        location /api/ {
            server_tokens off;
            include uwsgi_params;
            uwsgi_pass unix:/tmp/uwsgi.socket;
            uwsgi_read_timeout 300s;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, HEAD, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, authorization';
        }
        location /content {
            server_tokens off;
            autoindex on;
            root /home/server/;
            auth_request /nginxAuth;
        }
        location /out {
            server_tokens off;
            root /home/server/;
            auth_request /nginxAuth;
            add_header 'Access-Control-Allow-Origin' '*' always;
        }
        location /nginxAuth {
            internal;
            proxy_pass              http://127.0.0.1:8080/api/user/nginx;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
        }
    }
}