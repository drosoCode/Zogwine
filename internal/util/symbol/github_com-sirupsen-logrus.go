// Code generated by 'yaegi extract github.com/sirupsen/logrus'. DO NOT EDIT.

package symbol

import (
	"bytes"
	"github.com/sirupsen/logrus"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/sirupsen/logrus/logrus"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AddHook":             reflect.ValueOf(logrus.AddHook),
		"AllLevels":           reflect.ValueOf(&logrus.AllLevels).Elem(),
		"Debug":               reflect.ValueOf(logrus.Debug),
		"DebugFn":             reflect.ValueOf(logrus.DebugFn),
		"DebugLevel":          reflect.ValueOf(logrus.DebugLevel),
		"Debugf":              reflect.ValueOf(logrus.Debugf),
		"Debugln":             reflect.ValueOf(logrus.Debugln),
		"DeferExitHandler":    reflect.ValueOf(logrus.DeferExitHandler),
		"Error":               reflect.ValueOf(logrus.Error),
		"ErrorFn":             reflect.ValueOf(logrus.ErrorFn),
		"ErrorKey":            reflect.ValueOf(&logrus.ErrorKey).Elem(),
		"ErrorLevel":          reflect.ValueOf(logrus.ErrorLevel),
		"Errorf":              reflect.ValueOf(logrus.Errorf),
		"Errorln":             reflect.ValueOf(logrus.Errorln),
		"Exit":                reflect.ValueOf(logrus.Exit),
		"Fatal":               reflect.ValueOf(logrus.Fatal),
		"FatalFn":             reflect.ValueOf(logrus.FatalFn),
		"FatalLevel":          reflect.ValueOf(logrus.FatalLevel),
		"Fatalf":              reflect.ValueOf(logrus.Fatalf),
		"Fatalln":             reflect.ValueOf(logrus.Fatalln),
		"FieldKeyFile":        reflect.ValueOf(constant.MakeFromLiteral("\"file\"", token.STRING, 0)),
		"FieldKeyFunc":        reflect.ValueOf(constant.MakeFromLiteral("\"func\"", token.STRING, 0)),
		"FieldKeyLevel":       reflect.ValueOf(constant.MakeFromLiteral("\"level\"", token.STRING, 0)),
		"FieldKeyLogrusError": reflect.ValueOf(constant.MakeFromLiteral("\"logrus_error\"", token.STRING, 0)),
		"FieldKeyMsg":         reflect.ValueOf(constant.MakeFromLiteral("\"msg\"", token.STRING, 0)),
		"FieldKeyTime":        reflect.ValueOf(constant.MakeFromLiteral("\"time\"", token.STRING, 0)),
		"GetLevel":            reflect.ValueOf(logrus.GetLevel),
		"Info":                reflect.ValueOf(logrus.Info),
		"InfoFn":              reflect.ValueOf(logrus.InfoFn),
		"InfoLevel":           reflect.ValueOf(logrus.InfoLevel),
		"Infof":               reflect.ValueOf(logrus.Infof),
		"Infoln":              reflect.ValueOf(logrus.Infoln),
		"IsLevelEnabled":      reflect.ValueOf(logrus.IsLevelEnabled),
		"New":                 reflect.ValueOf(logrus.New),
		"NewEntry":            reflect.ValueOf(logrus.NewEntry),
		"Panic":               reflect.ValueOf(logrus.Panic),
		"PanicFn":             reflect.ValueOf(logrus.PanicFn),
		"PanicLevel":          reflect.ValueOf(logrus.PanicLevel),
		"Panicf":              reflect.ValueOf(logrus.Panicf),
		"Panicln":             reflect.ValueOf(logrus.Panicln),
		"ParseLevel":          reflect.ValueOf(logrus.ParseLevel),
		"Print":               reflect.ValueOf(logrus.Print),
		"PrintFn":             reflect.ValueOf(logrus.PrintFn),
		"Printf":              reflect.ValueOf(logrus.Printf),
		"Println":             reflect.ValueOf(logrus.Println),
		"RegisterExitHandler": reflect.ValueOf(logrus.RegisterExitHandler),
		"SetBufferPool":       reflect.ValueOf(logrus.SetBufferPool),
		"SetFormatter":        reflect.ValueOf(logrus.SetFormatter),
		"SetLevel":            reflect.ValueOf(logrus.SetLevel),
		"SetOutput":           reflect.ValueOf(logrus.SetOutput),
		"SetReportCaller":     reflect.ValueOf(logrus.SetReportCaller),
		"StandardLogger":      reflect.ValueOf(logrus.StandardLogger),
		"Trace":               reflect.ValueOf(logrus.Trace),
		"TraceFn":             reflect.ValueOf(logrus.TraceFn),
		"TraceLevel":          reflect.ValueOf(logrus.TraceLevel),
		"Tracef":              reflect.ValueOf(logrus.Tracef),
		"Traceln":             reflect.ValueOf(logrus.Traceln),
		"Warn":                reflect.ValueOf(logrus.Warn),
		"WarnFn":              reflect.ValueOf(logrus.WarnFn),
		"WarnLevel":           reflect.ValueOf(logrus.WarnLevel),
		"Warnf":               reflect.ValueOf(logrus.Warnf),
		"Warning":             reflect.ValueOf(logrus.Warning),
		"WarningFn":           reflect.ValueOf(logrus.WarningFn),
		"Warningf":            reflect.ValueOf(logrus.Warningf),
		"Warningln":           reflect.ValueOf(logrus.Warningln),
		"Warnln":              reflect.ValueOf(logrus.Warnln),
		"WithContext":         reflect.ValueOf(logrus.WithContext),
		"WithError":           reflect.ValueOf(logrus.WithError),
		"WithField":           reflect.ValueOf(logrus.WithField),
		"WithFields":          reflect.ValueOf(logrus.WithFields),
		"WithTime":            reflect.ValueOf(logrus.WithTime),

		// type definitions
		"BufferPool":      reflect.ValueOf((*logrus.BufferPool)(nil)),
		"Entry":           reflect.ValueOf((*logrus.Entry)(nil)),
		"Ext1FieldLogger": reflect.ValueOf((*logrus.Ext1FieldLogger)(nil)),
		"FieldLogger":     reflect.ValueOf((*logrus.FieldLogger)(nil)),
		"FieldMap":        reflect.ValueOf((*logrus.FieldMap)(nil)),
		"Fields":          reflect.ValueOf((*logrus.Fields)(nil)),
		"Formatter":       reflect.ValueOf((*logrus.Formatter)(nil)),
		"Hook":            reflect.ValueOf((*logrus.Hook)(nil)),
		"JSONFormatter":   reflect.ValueOf((*logrus.JSONFormatter)(nil)),
		"Level":           reflect.ValueOf((*logrus.Level)(nil)),
		"LevelHooks":      reflect.ValueOf((*logrus.LevelHooks)(nil)),
		"LogFunction":     reflect.ValueOf((*logrus.LogFunction)(nil)),
		"Logger":          reflect.ValueOf((*logrus.Logger)(nil)),
		"MutexWrap":       reflect.ValueOf((*logrus.MutexWrap)(nil)),
		"StdLogger":       reflect.ValueOf((*logrus.StdLogger)(nil)),
		"TextFormatter":   reflect.ValueOf((*logrus.TextFormatter)(nil)),

		// interface wrapper definitions
		"_BufferPool":      reflect.ValueOf((*_github_com_sirupsen_logrus_BufferPool)(nil)),
		"_Ext1FieldLogger": reflect.ValueOf((*_github_com_sirupsen_logrus_Ext1FieldLogger)(nil)),
		"_FieldLogger":     reflect.ValueOf((*_github_com_sirupsen_logrus_FieldLogger)(nil)),
		"_Formatter":       reflect.ValueOf((*_github_com_sirupsen_logrus_Formatter)(nil)),
		"_Hook":            reflect.ValueOf((*_github_com_sirupsen_logrus_Hook)(nil)),
		"_StdLogger":       reflect.ValueOf((*_github_com_sirupsen_logrus_StdLogger)(nil)),
	}
}

// _github_com_sirupsen_logrus_BufferPool is an interface wrapper for BufferPool type
type _github_com_sirupsen_logrus_BufferPool struct {
	IValue interface{}
	WGet   func() *bytes.Buffer
	WPut   func(a0 *bytes.Buffer)
}

func (W _github_com_sirupsen_logrus_BufferPool) Get() *bytes.Buffer {
	return W.WGet()
}
func (W _github_com_sirupsen_logrus_BufferPool) Put(a0 *bytes.Buffer) {
	W.WPut(a0)
}

// _github_com_sirupsen_logrus_Ext1FieldLogger is an interface wrapper for Ext1FieldLogger type
type _github_com_sirupsen_logrus_Ext1FieldLogger struct {
	IValue      interface{}
	WDebug      func(args ...interface{})
	WDebugf     func(format string, args ...interface{})
	WDebugln    func(args ...interface{})
	WError      func(args ...interface{})
	WErrorf     func(format string, args ...interface{})
	WErrorln    func(args ...interface{})
	WFatal      func(args ...interface{})
	WFatalf     func(format string, args ...interface{})
	WFatalln    func(args ...interface{})
	WInfo       func(args ...interface{})
	WInfof      func(format string, args ...interface{})
	WInfoln     func(args ...interface{})
	WPanic      func(args ...interface{})
	WPanicf     func(format string, args ...interface{})
	WPanicln    func(args ...interface{})
	WPrint      func(args ...interface{})
	WPrintf     func(format string, args ...interface{})
	WPrintln    func(args ...interface{})
	WTrace      func(args ...interface{})
	WTracef     func(format string, args ...interface{})
	WTraceln    func(args ...interface{})
	WWarn       func(args ...interface{})
	WWarnf      func(format string, args ...interface{})
	WWarning    func(args ...interface{})
	WWarningf   func(format string, args ...interface{})
	WWarningln  func(args ...interface{})
	WWarnln     func(args ...interface{})
	WWithError  func(err error) *logrus.Entry
	WWithField  func(key string, value interface{}) *logrus.Entry
	WWithFields func(fields logrus.Fields) *logrus.Entry
}

func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Debug(args ...interface{}) {
	W.WDebug(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Debugf(format string, args ...interface{}) {
	W.WDebugf(format, args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Debugln(args ...interface{}) {
	W.WDebugln(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Error(args ...interface{}) {
	W.WError(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Errorf(format string, args ...interface{}) {
	W.WErrorf(format, args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Errorln(args ...interface{}) {
	W.WErrorln(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Fatal(args ...interface{}) {
	W.WFatal(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Fatalf(format string, args ...interface{}) {
	W.WFatalf(format, args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Fatalln(args ...interface{}) {
	W.WFatalln(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Info(args ...interface{}) {
	W.WInfo(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Infof(format string, args ...interface{}) {
	W.WInfof(format, args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Infoln(args ...interface{}) {
	W.WInfoln(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Panic(args ...interface{}) {
	W.WPanic(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Panicf(format string, args ...interface{}) {
	W.WPanicf(format, args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Panicln(args ...interface{}) {
	W.WPanicln(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Print(args ...interface{}) {
	W.WPrint(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Printf(format string, args ...interface{}) {
	W.WPrintf(format, args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Println(args ...interface{}) {
	W.WPrintln(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Trace(args ...interface{}) {
	W.WTrace(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Tracef(format string, args ...interface{}) {
	W.WTracef(format, args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Traceln(args ...interface{}) {
	W.WTraceln(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Warn(args ...interface{}) {
	W.WWarn(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Warnf(format string, args ...interface{}) {
	W.WWarnf(format, args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Warning(args ...interface{}) {
	W.WWarning(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Warningf(format string, args ...interface{}) {
	W.WWarningf(format, args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Warningln(args ...interface{}) {
	W.WWarningln(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) Warnln(args ...interface{}) {
	W.WWarnln(args...)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) WithError(err error) *logrus.Entry {
	return W.WWithError(err)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) WithField(key string, value interface{}) *logrus.Entry {
	return W.WWithField(key, value)
}
func (W _github_com_sirupsen_logrus_Ext1FieldLogger) WithFields(fields logrus.Fields) *logrus.Entry {
	return W.WWithFields(fields)
}

// _github_com_sirupsen_logrus_FieldLogger is an interface wrapper for FieldLogger type
type _github_com_sirupsen_logrus_FieldLogger struct {
	IValue      interface{}
	WDebug      func(args ...interface{})
	WDebugf     func(format string, args ...interface{})
	WDebugln    func(args ...interface{})
	WError      func(args ...interface{})
	WErrorf     func(format string, args ...interface{})
	WErrorln    func(args ...interface{})
	WFatal      func(args ...interface{})
	WFatalf     func(format string, args ...interface{})
	WFatalln    func(args ...interface{})
	WInfo       func(args ...interface{})
	WInfof      func(format string, args ...interface{})
	WInfoln     func(args ...interface{})
	WPanic      func(args ...interface{})
	WPanicf     func(format string, args ...interface{})
	WPanicln    func(args ...interface{})
	WPrint      func(args ...interface{})
	WPrintf     func(format string, args ...interface{})
	WPrintln    func(args ...interface{})
	WWarn       func(args ...interface{})
	WWarnf      func(format string, args ...interface{})
	WWarning    func(args ...interface{})
	WWarningf   func(format string, args ...interface{})
	WWarningln  func(args ...interface{})
	WWarnln     func(args ...interface{})
	WWithError  func(err error) *logrus.Entry
	WWithField  func(key string, value interface{}) *logrus.Entry
	WWithFields func(fields logrus.Fields) *logrus.Entry
}

func (W _github_com_sirupsen_logrus_FieldLogger) Debug(args ...interface{}) {
	W.WDebug(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Debugf(format string, args ...interface{}) {
	W.WDebugf(format, args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Debugln(args ...interface{}) {
	W.WDebugln(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Error(args ...interface{}) {
	W.WError(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Errorf(format string, args ...interface{}) {
	W.WErrorf(format, args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Errorln(args ...interface{}) {
	W.WErrorln(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Fatal(args ...interface{}) {
	W.WFatal(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Fatalf(format string, args ...interface{}) {
	W.WFatalf(format, args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Fatalln(args ...interface{}) {
	W.WFatalln(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Info(args ...interface{}) {
	W.WInfo(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Infof(format string, args ...interface{}) {
	W.WInfof(format, args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Infoln(args ...interface{}) {
	W.WInfoln(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Panic(args ...interface{}) {
	W.WPanic(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Panicf(format string, args ...interface{}) {
	W.WPanicf(format, args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Panicln(args ...interface{}) {
	W.WPanicln(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Print(args ...interface{}) {
	W.WPrint(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Printf(format string, args ...interface{}) {
	W.WPrintf(format, args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Println(args ...interface{}) {
	W.WPrintln(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Warn(args ...interface{}) {
	W.WWarn(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Warnf(format string, args ...interface{}) {
	W.WWarnf(format, args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Warning(args ...interface{}) {
	W.WWarning(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Warningf(format string, args ...interface{}) {
	W.WWarningf(format, args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Warningln(args ...interface{}) {
	W.WWarningln(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) Warnln(args ...interface{}) {
	W.WWarnln(args...)
}
func (W _github_com_sirupsen_logrus_FieldLogger) WithError(err error) *logrus.Entry {
	return W.WWithError(err)
}
func (W _github_com_sirupsen_logrus_FieldLogger) WithField(key string, value interface{}) *logrus.Entry {
	return W.WWithField(key, value)
}
func (W _github_com_sirupsen_logrus_FieldLogger) WithFields(fields logrus.Fields) *logrus.Entry {
	return W.WWithFields(fields)
}

// _github_com_sirupsen_logrus_Formatter is an interface wrapper for Formatter type
type _github_com_sirupsen_logrus_Formatter struct {
	IValue  interface{}
	WFormat func(a0 *logrus.Entry) ([]byte, error)
}

func (W _github_com_sirupsen_logrus_Formatter) Format(a0 *logrus.Entry) ([]byte, error) {
	return W.WFormat(a0)
}

// _github_com_sirupsen_logrus_Hook is an interface wrapper for Hook type
type _github_com_sirupsen_logrus_Hook struct {
	IValue  interface{}
	WFire   func(a0 *logrus.Entry) error
	WLevels func() []logrus.Level
}

func (W _github_com_sirupsen_logrus_Hook) Fire(a0 *logrus.Entry) error {
	return W.WFire(a0)
}
func (W _github_com_sirupsen_logrus_Hook) Levels() []logrus.Level {
	return W.WLevels()
}

// _github_com_sirupsen_logrus_StdLogger is an interface wrapper for StdLogger type
type _github_com_sirupsen_logrus_StdLogger struct {
	IValue   interface{}
	WFatal   func(a0 ...interface{})
	WFatalf  func(a0 string, a1 ...interface{})
	WFatalln func(a0 ...interface{})
	WPanic   func(a0 ...interface{})
	WPanicf  func(a0 string, a1 ...interface{})
	WPanicln func(a0 ...interface{})
	WPrint   func(a0 ...interface{})
	WPrintf  func(a0 string, a1 ...interface{})
	WPrintln func(a0 ...interface{})
}

func (W _github_com_sirupsen_logrus_StdLogger) Fatal(a0 ...interface{}) {
	W.WFatal(a0...)
}
func (W _github_com_sirupsen_logrus_StdLogger) Fatalf(a0 string, a1 ...interface{}) {
	W.WFatalf(a0, a1...)
}
func (W _github_com_sirupsen_logrus_StdLogger) Fatalln(a0 ...interface{}) {
	W.WFatalln(a0...)
}
func (W _github_com_sirupsen_logrus_StdLogger) Panic(a0 ...interface{}) {
	W.WPanic(a0...)
}
func (W _github_com_sirupsen_logrus_StdLogger) Panicf(a0 string, a1 ...interface{}) {
	W.WPanicf(a0, a1...)
}
func (W _github_com_sirupsen_logrus_StdLogger) Panicln(a0 ...interface{}) {
	W.WPanicln(a0...)
}
func (W _github_com_sirupsen_logrus_StdLogger) Print(a0 ...interface{}) {
	W.WPrint(a0...)
}
func (W _github_com_sirupsen_logrus_StdLogger) Printf(a0 string, a1 ...interface{}) {
	W.WPrintf(a0, a1...)
}
func (W _github_com_sirupsen_logrus_StdLogger) Println(a0 ...interface{}) {
	W.WPrintln(a0...)
}
